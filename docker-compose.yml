version: '3.3'

services:
  user:
    build: ./User
    restart: on-failure:1000
    depends_on:
      - 'user-db-srv'
    ports:
      - 8001:8000
    volumes:
      - "./User:/app"
  user-db-srv:
    image: postgres:alpine
    # command: --default-authentication-plugin=mysql_native_password
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - "/opt/data/user:/var/lib/postgresql/data"
    ports:
      - 8080:8080
  restaurant:
    build: ./Restaurant
    restart: always
    depends_on:
      - 'restaurant-db-srv'
    ports:
      - 8002:8000
    volumes:
      - "./Restaurant:/app"
  restaurant-celery:
    build: ./Restaurant
    command: celery --app app.main.celery_app worker -c 2 --loglevel=info
    restart: always
    command: python app/celery/consumers.py
    depends_on:
      - 'restaurant'
      - 'restaurant-db-srv'
      - 'event-bus'
    ports:
      - 8010:8000
    volumes:
      - "./Restaurant:/app"
  restaurant-db-srv:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - "/opt/data/restaurant:/var/lib/mysql"
  coupon:
    build: ./Coupon
    restart: on-failure
    depends_on:
      - 'user'
    ports:
      - '8003:3000'
    volumes:
      - './Coupon:/app'
      - /app/node_modules/
  coupon-db-srv:
    image: mongo
    restart: on-failure
    command: mongod --bind_ip 0.0.0.0
    volumes:
      - "/opt/data/coupon:/data/db"
  event-bus:
    image: rabbitmq:management-alpine
    restart: on-failure
    # command: rabbitmqctl reset
    ports:
      - '15672:15672'